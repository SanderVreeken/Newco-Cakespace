{"version":3,"sources":["components/Product.js","components/SearchBar.js","components/StateProvider.js","components/Owner.js","components/Content.js","components/SideBar.js","components/Main.js","components/User.js","components/NavBar.js","components/MenuBar.js","components/Message.js","components/Messenger.js","App.js","serviceWorker.js","Reducer.js","index.js"],"names":["Product","className","number","stars","n","push","map","star","getStarsElement","SearchBar","placeholder","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Owner","dispatch","onClick","type","item","Content","isMenuBarActive","SideBar","props","Main","User","NavBar","navBarItems","active","name","icon","style","color","MenuBar","visibility","Message","Messenger","isChatting","isMessengerActive","updateIsChatting","event","stopPropagation","bottom","getBackIcon","getMessagesList","App","Boolean","window","location","hostname","match","state","action","console","log","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8d1ea6bc.chunk.js","sourcesContent":["import React from 'react'\n// AiFillHeart\nimport { AiOutlineClockCircle, AiOutlineEye, AiOutlineHeart, AiFillStar } from 'react-icons/ai'\n\nconst Product = () => {\n\n    // Function to get the stars loaded within the page.\n    const getStarsElement = (number) => {\n        const stars = []\n        for (let n = 0; n < number; n++) {\n            stars.push(\n                <div className='product__star'>\n                    <AiFillStar />\n                </div>\n            )\n        }\n\n        return (\n            <div className='product__stars'>\n                {stars.map(star => {\n                    return star\n                })}\n            </div>    \n        )\n    }\n\n    return (\n        <div className='product'>\n            <div className='product__header'>\n                <h4 className='product__title'>Strawberry Rhubarb Pie</h4>\n                <div className='product__like'>\n                    <AiOutlineHeart />\n                </div>\n            </div>\n            <div className='product__meta'>\n                <div className='product__metatag'>\n                    <AiOutlineEye />\n                    <p>24,279 seen</p>\n                </div>\n                <div className='product__metatag'>\n                    <AiOutlineHeart />\n                    <p>161 saved</p>\n                </div>\n                <div className='product__metatag'>\n                    <AiOutlineClockCircle />\n                    <p>19-08-2020</p>\n                </div>\n            </div>\n            <div className='product__photos'>\n                <div className='product__photo'></div>\n                <div className='product__photo'></div>\n                <div className='product__photo'></div>\n            </div>\n            <div className='product__information'>\n                <p>â‚¬ 12,95</p>\n                <p>Cakes</p>\n                {getStarsElement(4)}\n            </div>\n\n            <div className='product__description'>\n                <h6>About this item</h6>\n                <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt. Cras dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus. Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac, enim. Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus.</p>\n            </div>\n            {/* <div className='product__body'></div> */}            \n        </div>\n    )\n}\n\nexport default Product","import React from 'react'\nimport { AiOutlineSearch } from 'react-icons/ai'\n\nconst SearchBar = () => {\n\n    return (\n        <div className='searchbar'>\n            <div className='searchbar__icon'>\n                <AiOutlineSearch />\n            </div>\n            <input className='searchbar__input' placeholder='Search Cakespace'></input>\n        </div>\n    )\n}\n\nexport default SearchBar","// FILE: The setup of the data layer.\nimport React, { createContext, useContext, useReducer } from 'react'\n\n// This is the actual data layer.\nexport const StateContext = createContext()\n\n// This is the provider in which the entire app will be wrapped.\nexport const StateProvider = ({ reducer, initialState, children }) => (\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\n        {children}\n    </StateContext.Provider>\n)\n\nexport const useStateValue = () => useContext(StateContext)\n","import React from 'react'\nimport { AiOutlineCompass, AiOutlineCreditCard, AiOutlineIdcard, AiOutlineMessage, AiOutlinePhone } from 'react-icons/ai' \n\nimport { useStateValue } from './StateProvider'\n\nconst Owner = () => {\n    const [, dispatch] = useStateValue()\n\n\n    // Function that opens the chat window and redirects to the right chat by changing state.\n    const startChat = () => {\n        dispatch({\n            type: 'UPDATE_IS_CHATTING',\n            item: true,\n        })\n        dispatch({\n            type: 'UPDATE_IS_MESSENGER_ACTIVE',\n            item: true\n        })\n    }\n\n    return (\n        <div className='owner'>\n            <div className='owner__header'>\n                <h5 className='owner__title'>Profile</h5>\n            </div>\n            <div className='owner__main'>\n                <h5 className='owner__name'>SanderVreeken</h5>  \n                <p className='owner__since'>Active for more than six months on Cakespace</p>\n            </div>\n            <div className='owner__validations'>\n                <div className='owner__check'>\n                    <div className='owner__icon'>\n                        <AiOutlinePhone />\n                    </div>\n                    <p className='owner__valid'>Phone number is checked</p>                 \n                </div>   \n                <div className='owner__check'>\n                    <div className='owner__icon'>\n                        <AiOutlineCreditCard />\n                    </div>\n                    <p className='owner__valid'>Bank account is checked</p>                 \n                </div>   \n                <div className='owner__check'>\n                    <div className='owner__icon'>\n                        <AiOutlineIdcard />\n                    </div>\n                    <p className='owner__valid'>Identity is checked</p>                 \n                </div>\n            </div>\n            <div className='owner__location'>\n                <div className='owner__icon'>\n                    <AiOutlineCompass />\n                </div>\n                <p className='owner__street'>Oostwaarts, Zoetermeer</p>  \n            </div>\n            <div className='btn owner__connect' onClick={() => startChat()}>\n                <div className='owner__icon'>\n                    <AiOutlineMessage />\n                </div>\n                <p className='owner__message'>Contact Sander Vreeken</p>  \n            </div>   \n        </div>\n    )\n}\n\nexport default Owner","import React from 'react'\nimport { BiRocket } from 'react-icons/bi'\n\nimport Product from './Product'\nimport SearchBar from './SearchBar'\nimport Owner from './Owner'\nimport { useStateValue } from './StateProvider'\n\nconst Content = () => {\n    const [{ isMenuBarActive }, dispatch] = useStateValue()\n\n    const updateIsMenuBarActive = event => {\n        dispatch({\n          type: 'UPDATE_IS_MENUBAR_ACTIVE',\n          item: !isMenuBarActive,\n        })\n      }\n\n    return (\n        <div className='content'>\n            <div className='content__header'>\n                <div className='btn btn-light content__icon' onClick={() => updateIsMenuBarActive()}>\n                    <BiRocket />\n                </div>\n            </div>\n            <div className='content__searchbar'>\n                <SearchBar />\n            </div>\n            <Product />\n            <Owner />\n        </div>\n    )\n}\n\nexport default Content","import React from 'react'\n\nimport Owner from './Owner'\nimport SearchBar from './SearchBar'\n\nconst SideBar = (props) => {\n\n    return (\n        <div className='sidebar'>\n            <SearchBar />\n            <Owner />\n        </div>\n    )\n}\n\nexport default SideBar","import React from 'react'\n\nimport Content from './Content'\nimport SideBar from './SideBar'\n\nconst Main = (props) => {\n\n    return (\n        <main className='main'>\n            <Content />\n            <SideBar />\n        </main>\n    )\n}\n\nexport default Main","import React from 'react'\nimport { AiOutlineDown } from 'react-icons/ai'\n\nconst User = () => {\n\n    return (\n        <div className='btn btn-light user'>\n            <div className='user__body'>\n                <div className='user__photo'></div>    \n                <div className='user__profile'>\n                    <h6 className='user__name'>SanderVreeken</h6>\n                    <p className='user__alias'>@SanderVreeken</p>     \n                </div>\n            </div>\n            <AiOutlineDown />\n        </div>\n    )\n}\n\nexport default User","import React from 'react'\nimport { AiOutlineBook, AiOutlineGlobal, AiOutlineHome, AiOutlinePlus, AiOutlineUser } from 'react-icons/ai'\nimport { BiRocket } from 'react-icons/bi'\n\nimport User from './User'\n\nconst NavBar = () => {\n\n    const navBarItems = [\n        {\n            active: false,\n            name: 'Home',\n            icon: <AiOutlineHome />,\n        }, {\n            active: true,\n            name: 'Explore',\n            icon: <AiOutlineGlobal />\n        }, {\n            active: false,\n            name: 'Bookmark',\n            icon: <AiOutlineBook />\n        }, {\n            active: false,\n            name: 'Profile',\n            icon: <AiOutlineUser />\n        }\n    ]\n\n    return (\n        <nav className='navbar'>\n            <div className='navbar__main'>\n                <div className='btn btn-light navbar__header'>\n                    <BiRocket />\n                </div>\n                {navBarItems.map(item => {\n                    return (\n                        <div className='btn btn-light navbar__item' style={{\n                            // Changing the color of the icon based on whether the page is actually active.\n                            color: item.active ? 'rgb(29, 161, 242)' : null\n                        }}>\n                            <div className='navbar__icon'>\n                                {item.icon}   \n                            </div>\n                            <h5 className='navbar__name'>{item.name}</h5>\n                        </div>\n                    )\n                })}\n                <div className='btn btn-primary navbar__button'>\n                    <h6 className='navbar__add'>Add Product</h6>\n                    <AiOutlinePlus />\n                </div>\n            </div>\n            <User />\n        </nav>\n    )\n}\n\nexport default NavBar","import React from 'react'\n\nimport NavBar from './NavBar'\nimport { useStateValue } from './StateProvider'\n\nconst MenuBar = () => {\n    const [{ isMenuBarActive }] = useStateValue()\n\n    return <div className='menubar' style={{\n        // visibility: isMenuBarVisible ? 'visible' : 'hidden',\n        visibility: isMenuBarActive ? 'visible' : 'hidden'\n    }}>\n        <NavBar />\n    </div>\n}\n\nexport default MenuBar","import React from 'react'\n\nconst Message = () => {\n\n    return (\n        <div className='btn message'>\n            <div className='message__icon'></div>\n            <div className='message__body'>\n                <div className='message__author'>\n                    <h6 className='message__name'>SanderVreeken</h6>\n                    <p className='message__alias'>@SanderVreeken</p>\n                </div>  \n                <p className='message__text'>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa.</p>\n            </div>\n            <p className='message__date'>19 Aug</p>\n        </div>\n    )\n}\n\nexport default Message","import React from 'react'\nimport { AiOutlineDown, AiOutlineArrowLeft, AiOutlineUp } from 'react-icons/ai'\n\nimport Message from './Message'\nimport { useStateValue } from './StateProvider'\n\nconst Messenger = () => {\n  const [{ isChatting, isMessengerActive }, dispatch] = useStateValue()\n\n  // Function to decide and load the back arrow icon when the user chatting.\n  const getBackIcon = isChatting => {\n    if (isChatting) {\n      return (\n        <div className='messenger__icon' onClick={(event) => updateIsChatting(event)}>\n          <AiOutlineArrowLeft />\n        </div>\n      )\n    }\n  }\n\n  // Function to decide and load the chats in case the user is not chatting already.\n  const getMessagesList = isChatting => {\n    if (!isChatting) {\n      return (\n        <Message />\n      )\n    }\n  }\n\n  const updateIsChatting = event => {\n    event.stopPropagation()\n    dispatch({\n      type: 'UPDATE_IS_CHATTING',\n      item: !isChatting,\n    })\n  }\n\n  const updateIsMessengerActive = () => {\n    dispatch({\n      type: 'UPDATE_IS_MESSENGER_ACTIVE',\n      item: !isMessengerActive,\n    })\n  }\n\n  return (\n    <div className='messenger' style={{\n      // Using state to animate the visibility of the component.\n      bottom: isMessengerActive ? 0 : -477\n    }}> \n      <div className='btn messenger__header' onClick={() => updateIsMessengerActive()}>\n        {getBackIcon(isChatting)}\n        <h5 className='messenger__title'>{isChatting ? 'SanderVreeken' : 'Messages'}</h5>\n        <div className='btn btn-light messenger__icon'>\n          {isMessengerActive ? <AiOutlineDown /> : <AiOutlineUp />}\n        </div>\n      </div>\n      <div className='messenger__body'>\n        {getMessagesList(isChatting)}\n      </div>\n    </div>\n  )\n}\n\nexport default Messenger\n","import React from 'react'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\n\nimport Main from './components/Main'\nimport MenuBar from './components/MenuBar'\nimport Messenger from './components/Messenger'\nimport NavBar from './components/NavBar'\n\nfunction App() {\n\n  return (\n    <div className='application'>\n      <NavBar/>\n      <Main /> \n\n      <MenuBar />\n      <Messenger />\n    </div>\n  ) \n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\n    isChatting: false,\n    isMenuBarActive: false,\n    isMessengerActive: false,\n}\n\nconst reducer = (state, action) => {\n    console.log(action)\n    switch(action.type) {\n        case 'UPDATE_IS_CHATTING':\n            return { \n                ...state,\n                isChatting: action.item\n            }\n        case 'UPDATE_IS_MENUBAR_ACTIVE':\n            return { \n                ...state,\n                isMenuBarActive: action.item\n            }\n        case 'UPDATE_IS_MESSENGER_ACTIVE':\n            // Logic for changing the state of the boolean of whether the messenger component is active.\n            return { \n                ...state,\n                isMessengerActive: action.item\n            }\n        default:\n            return state  \n    }\n}\n\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport reducer, { initialState } from './Reducer';\n// The StateProvider is a higher order component.\nimport { StateProvider } from './components/StateProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}